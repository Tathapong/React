{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\cc11-basic-todo-list\\\\src\\\\contexts\\\\TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext();\n\nfunction TodoContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [todoList, setTodoList] = useState([]);\n\n  const createTodo = title => {\n    axios.post(\"http://localhost:8080/todos\", {\n      title,\n      completed: false\n    }).then(res => {\n      const newTodo = res.data.todo;\n      setTodoList([newTodo, ...todoList]);\n    }).catch(err => console.log(err));\n  };\n\n  const removeTodo = id => {\n    axios.delete(`http://localhost:8080/todos/${id}`).then(() => {\n      const idx = todoList.findIndex(el => el.id === id);\n\n      if (idx !== -1) {\n        const cloneTodoList = [...todoList];\n        cloneTodoList.splice(idx, 1);\n        setTodoList(cloneTodoList);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const updateTodo = (newValue, id) => {\n    axios.put(`http://localhost:8080/todos/${id}`, { ...newValue\n    }).then(res => {\n      const idx = todoList.findIndex(el => el.id === id);\n\n      if (idx !== -1) {\n        const cloneTodoList = [...todoList];\n        cloneTodoList.splice(idx, 1, { ...newValue,\n          id\n        });\n        setTodoList(cloneTodoList);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/todos\").then(res => setTodoList(res.data.todos)).catch(err => console.log(err));\n  }, []);\n  const searchTodoList = todoList.filter(el => el.title.toUpperCase().includes(searchInput.toUpperCase()));\n  const filteredTodoList = searchTodoList.filter(el => searchStatus === null || el.completed === searchStatus);\n  const filteredTodoListLimit = filteredTodoList.slice((page.currentPage - 1) * page.pagelimit, page.currentPage * page.pagelimit);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      todoList,\n      setTodoList,\n      createTodo,\n      removeTodo,\n      updateTodo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoContextProvider, \"hGGsNTuaOn7oyphipNa0xsYj1Yc=\");\n\n_c = TodoContextProvider;\nexport { TodoContext, TodoContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["D:/React/cc11-basic-todo-list/src/contexts/TodoContext.js"],"names":["createContext","useState","useEffect","axios","v4","uuidv4","TodoContext","TodoContextProvider","children","todoList","setTodoList","createTodo","title","post","completed","then","res","newTodo","data","todo","catch","err","console","log","removeTodo","id","delete","idx","findIndex","el","cloneTodoList","splice","updateTodo","newValue","put","get","todos","searchTodoList","filter","toUpperCase","includes","searchInput","filteredTodoList","searchStatus","filteredTodoListLimit","slice","page","currentPage","pagelimit"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TodoContext = createContext();\r\n\r\nfunction TodoContextProvider({ children }) {\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  const createTodo = (title) => {\r\n    axios\r\n      .post(\"http://localhost:8080/todos\", { title, completed: false })\r\n      .then((res) => {\r\n        const newTodo = res.data.todo;\r\n        setTodoList([newTodo, ...todoList]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    axios\r\n      .delete(`http://localhost:8080/todos/${id}`)\r\n      .then(() => {\r\n        const idx = todoList.findIndex((el) => el.id === id);\r\n        if (idx !== -1) {\r\n          const cloneTodoList = [...todoList];\r\n          cloneTodoList.splice(idx, 1);\r\n          setTodoList(cloneTodoList);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const updateTodo = (newValue, id) => {\r\n    axios\r\n      .put(`http://localhost:8080/todos/${id}`, { ...newValue })\r\n      .then((res) => {\r\n        const idx = todoList.findIndex((el) => el.id === id);\r\n        if (idx !== -1) {\r\n          const cloneTodoList = [...todoList];\r\n          cloneTodoList.splice(idx, 1, { ...newValue, id });\r\n          setTodoList(cloneTodoList);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/todos\")\r\n      .then((res) => setTodoList(res.data.todos))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const searchTodoList = todoList.filter((el) => el.title.toUpperCase().includes(searchInput.toUpperCase()));\r\n  const filteredTodoList = searchTodoList.filter((el) => searchStatus === null || el.completed === searchStatus);\r\n  const filteredTodoListLimit = filteredTodoList.slice(\r\n    (page.currentPage - 1) * page.pagelimit,\r\n    page.currentPage * page.pagelimit\r\n  );\r\n\r\n  return (\r\n    <TodoContext.Provider value={{ todoList, setTodoList, createTodo, removeTodo, updateTodo }}>\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nexport { TodoContext, TodoContextProvider };\r\n"]},"metadata":{},"sourceType":"module"}