{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\cc11-basic-todo-list\\\\src\\\\components\\\\todo-list\\\\TodoInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { TodoContext } from \"../../contexts/TodoContext\";\nimport Button from \"../ui/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoInput(props) {\n  _s();\n\n  // Destructuring object\n  const {\n    id,\n    title,\n    completed,\n    isEditing,\n    setIsEditing\n  } = props;\n  const ctx = useContext(TodoContext); // State parameter declaration\n\n  const [todoInput, setTodoInput] = useState(id ? title : \"\");\n  const [todoError, setTodoError] = useState(\"\"); // Function (Arrow) handle of Add Button to create a task\n\n  const handleClickCreateBtn = () => {\n    if (!todoInput) {\n      setTodoError(\"Title is required\");\n    } else {\n      ctx.createTodo(todoInput);\n      setTodoInput(\"\");\n    }\n  }; // Function (Arrow) handle of error text for empty input\n\n\n  const handleClickUpdateBtn = () => {\n    if (!todoInput) {\n      setTodoError(\"Title is required\");\n    } else {\n      ctx.updateTodo({\n        title: todoInput,\n        completed\n      }, id);\n      setIsEditing(!isEditing);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `form-control ${todoError ? \"is-invalid\" : \"\"}`,\n        placeholder: \"Enter new todo\",\n        value: todoInput,\n        onChange: ev => {\n          setTodoInput(ev.target.value);\n          setTodoError(\"\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), id ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClickUpdateBtn,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: handleClickCreateBtn,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"outline-secondary\",\n        onClick: () => setTodoInput(\"\"),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-xmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-danger\",\n      children: todoError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoInput, \"bAdmPr6I5U87b2lNJdbbkAVYnhA=\");\n\n_c = TodoInput;\nexport default TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["D:/React/cc11-basic-todo-list/src/components/todo-list/TodoInput.js"],"names":["useState","useContext","TodoContext","Button","TodoInput","props","id","title","completed","isEditing","setIsEditing","ctx","todoInput","setTodoInput","todoError","setTodoError","handleClickCreateBtn","createTodo","handleClickUpdateBtn","updateTodo","ev","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB;AACA,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAoDL,KAA1D;AAEA,QAAMM,GAAG,GAAGV,UAAU,CAACC,WAAD,CAAtB,CAJwB,CAMxB;;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACM,EAAE,GAAGC,KAAH,GAAW,EAAd,CAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C,CARwB,CAUxB;;AACA,QAAMgB,oBAAoB,GAAG,MAAM;AACjC,QAAI,CAACJ,SAAL,EAAgB;AACdG,MAAAA,YAAY,CAAC,mBAAD,CAAZ;AACD,KAFD,MAEO;AACLJ,MAAAA,GAAG,CAACM,UAAJ,CAAeL,SAAf;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GAPD,CAXwB,CAoBxB;;;AACA,QAAMK,oBAAoB,GAAG,MAAM;AACjC,QAAI,CAACN,SAAL,EAAgB;AACdG,MAAAA,YAAY,CAAC,mBAAD,CAAZ;AACD,KAFD,MAEO;AACLJ,MAAAA,GAAG,CAACQ,UAAJ,CAAe;AAAEZ,QAAAA,KAAK,EAAEK,SAAT;AAAoBJ,QAAAA;AAApB,OAAf,EAAgDF,EAAhD;AACAI,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;AACF,GAPD;;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAG,gBAAeK,SAAS,GAAG,YAAH,GAAkB,EAAG,EAF3D;AAGE,QAAA,WAAW,EAAC,gBAHd;AAIE,QAAA,KAAK,EAAEF,SAJT;AAKE,QAAA,QAAQ,EAAGQ,EAAD,IAAQ;AAChBP,UAAAA,YAAY,CAACO,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAZ;AACAP,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AARH;AAAA;AAAA;AAAA;AAAA,cADF,EAWGT,EAAE,gBACD,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEY,oBAAjB;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADC,gBAKD,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEF,oBAAjC;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAoBE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,mBAAd;AAAkC,QAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,EAAD,CAA7D;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA,gBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA,kBADF;AA8BD;;GA3DQV,S;;KAAAA,S;AA4DT,eAAeA,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { TodoContext } from \"../../contexts/TodoContext\";\r\n\r\nimport Button from \"../ui/Button\";\r\n\r\nfunction TodoInput(props) {\r\n  // Destructuring object\r\n  const { id, title, completed, isEditing, setIsEditing } = props;\r\n\r\n  const ctx = useContext(TodoContext);\r\n\r\n  // State parameter declaration\r\n  const [todoInput, setTodoInput] = useState(id ? title : \"\");\r\n  const [todoError, setTodoError] = useState(\"\");\r\n\r\n  // Function (Arrow) handle of Add Button to create a task\r\n  const handleClickCreateBtn = () => {\r\n    if (!todoInput) {\r\n      setTodoError(\"Title is required\");\r\n    } else {\r\n      ctx.createTodo(todoInput);\r\n      setTodoInput(\"\");\r\n    }\r\n  };\r\n\r\n  // Function (Arrow) handle of error text for empty input\r\n  const handleClickUpdateBtn = () => {\r\n    if (!todoInput) {\r\n      setTodoError(\"Title is required\");\r\n    } else {\r\n      ctx.updateTodo({ title: todoInput, completed }, id);\r\n      setIsEditing(!isEditing);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"input-group shadow\">\r\n        <input\r\n          type=\"text\"\r\n          className={`form-control ${todoError ? \"is-invalid\" : \"\"}`}\r\n          placeholder=\"Enter new todo\"\r\n          value={todoInput}\r\n          onChange={(ev) => {\r\n            setTodoInput(ev.target.value);\r\n            setTodoError(\"\");\r\n          }}\r\n        ></input>\r\n        {id ? (\r\n          <Button onClick={handleClickUpdateBtn}>\r\n            <i className=\"fa-solid fa-check\" />\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"success\" onClick={handleClickCreateBtn}>\r\n            <i className=\"fa-solid fa-plus\" />\r\n          </Button>\r\n        )}\r\n        <Button color=\"outline-secondary\" onClick={() => setTodoInput(\"\")}>\r\n          <i className=\"fa-solid fa-xmark\"></i>\r\n        </Button>\r\n      </div>\r\n\r\n      <small className=\"text-danger\">{todoError}</small>\r\n    </>\r\n  );\r\n}\r\nexport default TodoInput;\r\n"]},"metadata":{},"sourceType":"module"}