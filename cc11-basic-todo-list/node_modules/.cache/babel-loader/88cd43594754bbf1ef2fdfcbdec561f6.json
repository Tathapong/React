{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\cc11-basic-todo-list\\\\src\\\\components\\\\pagination\\\\PageItem.js\",\n    _s = $RefreshSig$();\n\nimport { TodoContext } from \"../../contexts/TodoContext\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageItem(props) {\n  _s();\n\n  const ctx = useContext(TodoContext); // Destructuring object\n\n  const {\n    active,\n    children,\n    page,\n    setPage,\n    id\n  } = props;\n\n  const setCurrentPage = ev => {\n    const clonePage = { ...page\n    };\n    if (ev.target.innerText) clonePage.currentPage = +ev.target.innerText;\n    setPage(clonePage);\n  };\n\n  const setBackNextPage = ev => {\n    const clonePage = { ...page\n    };\n    const lastPage = Math.ceil(ctx.filteredTodoList.length / page.pagelimit);\n    if (id === \"back\") clonePage.currentPage = clonePage.currentPage !== 1 ? clonePage.currentPage - 1 : clonePage.currentPage;else if (id === \"next\") clonePage.currentPage = clonePage.currentPage !== lastPage ? clonePage.currentPage + 1 : clonePage.currentPage;\n    setPage(clonePage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `page-item ${active ? \"active\" : \"\"} `,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: id || \"\",\n      className: \"page-link\",\n      onClick: id ? setBackNextPage : setCurrentPage,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PageItem, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c = PageItem;\nexport default PageItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageItem\");","map":{"version":3,"sources":["D:/React/cc11-basic-todo-list/src/components/pagination/PageItem.js"],"names":["TodoContext","useContext","PageItem","props","ctx","active","children","page","setPage","id","setCurrentPage","ev","clonePage","target","innerText","currentPage","setBackNextPage","lastPage","Math","ceil","filteredTodoList","length","pagelimit"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,GAAG,GAAGH,UAAU,CAACD,WAAD,CAAtB,CADuB,CAEvB;;AACA,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA;AAAnC,MAA0CN,KAAhD;;AAEA,QAAMO,cAAc,GAAIC,EAAD,IAAQ;AAC7B,UAAMC,SAAS,GAAG,EAAE,GAAGL;AAAL,KAAlB;AACA,QAAII,EAAE,CAACE,MAAH,CAAUC,SAAd,EAAyBF,SAAS,CAACG,WAAV,GAAwB,CAACJ,EAAE,CAACE,MAAH,CAAUC,SAAnC;AACzBN,IAAAA,OAAO,CAACI,SAAD,CAAP;AACD,GAJD;;AAMA,QAAMI,eAAe,GAAIL,EAAD,IAAQ;AAC9B,UAAMC,SAAS,GAAG,EAAE,GAAGL;AAAL,KAAlB;AACA,UAAMU,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUf,GAAG,CAACgB,gBAAJ,CAAqBC,MAArB,GAA8Bd,IAAI,CAACe,SAA7C,CAAjB;AACA,QAAIb,EAAE,KAAK,MAAX,EACEG,SAAS,CAACG,WAAV,GAAwBH,SAAS,CAACG,WAAV,KAA0B,CAA1B,GAA8BH,SAAS,CAACG,WAAV,GAAwB,CAAtD,GAA0DH,SAAS,CAACG,WAA5F,CADF,KAEK,IAAIN,EAAE,KAAK,MAAX,EACHG,SAAS,CAACG,WAAV,GAAwBH,SAAS,CAACG,WAAV,KAA0BE,QAA1B,GAAqCL,SAAS,CAACG,WAAV,GAAwB,CAA7D,GAAiEH,SAAS,CAACG,WAAnG;AACFP,IAAAA,OAAO,CAACI,SAAD,CAAP;AACD,GARD;;AAUA,sBACE;AAAI,IAAA,SAAS,EAAG,aAAYP,MAAM,GAAG,QAAH,GAAc,EAAG,GAAnD;AAAA,2BACE;AAAQ,MAAA,EAAE,EAAEI,EAAE,IAAI,EAAlB;AAAsB,MAAA,SAAS,EAAC,WAAhC;AAA4C,MAAA,OAAO,EAAEA,EAAE,GAAGO,eAAH,GAAqBN,cAA5E;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA5BQJ,Q;;KAAAA,Q;AA6BT,eAAeA,QAAf","sourcesContent":["import { TodoContext } from \"../../contexts/TodoContext\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction PageItem(props) {\r\n  const ctx = useContext(TodoContext);\r\n  // Destructuring object\r\n  const { active, children, page, setPage, id } = props;\r\n\r\n  const setCurrentPage = (ev) => {\r\n    const clonePage = { ...page };\r\n    if (ev.target.innerText) clonePage.currentPage = +ev.target.innerText;\r\n    setPage(clonePage);\r\n  };\r\n\r\n  const setBackNextPage = (ev) => {\r\n    const clonePage = { ...page };\r\n    const lastPage = Math.ceil(ctx.filteredTodoList.length / page.pagelimit);\r\n    if (id === \"back\")\r\n      clonePage.currentPage = clonePage.currentPage !== 1 ? clonePage.currentPage - 1 : clonePage.currentPage;\r\n    else if (id === \"next\")\r\n      clonePage.currentPage = clonePage.currentPage !== lastPage ? clonePage.currentPage + 1 : clonePage.currentPage;\r\n    setPage(clonePage);\r\n  };\r\n\r\n  return (\r\n    <li className={`page-item ${active ? \"active\" : \"\"} `}>\r\n      <button id={id || \"\"} className=\"page-link\" onClick={id ? setBackNextPage : setCurrentPage}>\r\n        {children}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\nexport default PageItem;\r\n"]},"metadata":{},"sourceType":"module"}