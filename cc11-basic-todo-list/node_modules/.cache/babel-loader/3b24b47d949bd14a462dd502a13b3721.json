{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\cc11-basic-todo-list\\\\src\\\\components\\\\todo-list\\\\TodoInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Button from \"../ui/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoInput(props) {\n  _s();\n\n  const {\n    createTodo\n  } = props;\n  const [todoInput, setTodoInput] = useState();\n  const [todoError, setTodoError] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `form-control ${todoError ? \"is-invalid\" : \"\"}`,\n        placeholder: \"Enter new todo\",\n        value: todoInput,\n        onChange: ev => {\n          setTodoInput(ev.target.value);\n          setTodoError(\"\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: () => {\n          if (!todoInput) {\n            setTodoError(\"Title is required\");\n          } else createTodo(todoInput);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"outline-secondary\",\n        onClick: () => setTodoInput(\"\"),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-xmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-danger\",\n      children: todoError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoInput, \"ASeNyXtUjUt+R8RYhmU/kQvfBVU=\");\n\n_c = TodoInput;\nexport default TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["D:/React/cc11-basic-todo-list/src/components/todo-list/TodoInput.js"],"names":["useState","Button","TodoInput","props","createTodo","todoInput","setTodoInput","todoError","setTodoError","ev","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAG,gBAAeO,SAAS,GAAG,YAAH,GAAkB,EAAG,EAF3D;AAGE,QAAA,WAAW,EAAC,gBAHd;AAIE,QAAA,KAAK,EAAEF,SAJT;AAKE,QAAA,QAAQ,EAAGI,EAAD,IAAQ;AAChBH,UAAAA,YAAY,CAACG,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAZ;AACAH,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AARH;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,cAAI,CAACH,SAAL,EAAgB;AACdG,YAAAA,YAAY,CAAC,mBAAD,CAAZ;AACD,WAFD,MAEOJ,UAAU,CAACC,SAAD,CAAV;AACR,SANH;AAAA,+BAQE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,mBAAd;AAAkC,QAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,EAAD,CAA7D;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA,gBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA,kBADF;AA8BD;;GAnCQL,S;;KAAAA,S;AAoCT,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Button from \"../ui/Button\";\r\n\r\nfunction TodoInput(props) {\r\n  const { createTodo } = props;\r\n  const [todoInput, setTodoInput] = useState();\r\n  const [todoError, setTodoError] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-group shadow\">\r\n        <input\r\n          type=\"text\"\r\n          className={`form-control ${todoError ? \"is-invalid\" : \"\"}`}\r\n          placeholder=\"Enter new todo\"\r\n          value={todoInput}\r\n          onChange={(ev) => {\r\n            setTodoInput(ev.target.value);\r\n            setTodoError(\"\");\r\n          }}\r\n        ></input>\r\n        <Button\r\n          color=\"success\"\r\n          onClick={() => {\r\n            if (!todoInput) {\r\n              setTodoError(\"Title is required\");\r\n            } else createTodo(todoInput);\r\n          }}\r\n        >\r\n          <i className=\"fa-solid fa-plus\"></i>\r\n        </Button>\r\n        <Button color=\"outline-secondary\" onClick={() => setTodoInput(\"\")}>\r\n          <i className=\"fa-solid fa-xmark\"></i>\r\n        </Button>\r\n      </div>\r\n      <small className=\"text-danger\">{todoError}</small>\r\n    </>\r\n  );\r\n}\r\nexport default TodoInput;\r\n"]},"metadata":{},"sourceType":"module"}