{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\cc11-basic-todo-list\\\\src\\\\components\\\\todo-list\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport Button from \"../ui/Button\";\nimport TodoInput from \"./TodoInput\";\nimport { TodoContext } from \"../../contexts/TodoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const ctx = useContext(TodoContext); // Destructuring object\n\n  const {\n    title,\n    completed,\n    id,\n    removeTodo,\n    updateTodo\n  } = props; // State parameter declaration\n\n  const [isEditing, setIsEditing] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `list-group-item d-flex flex-wrap  align-items-center bd-callout ${completed ? \"bd-callout-success\" : \"bd-callout-warning\"}`,\n    children: isEditing ? /*#__PURE__*/_jsxDEV(TodoInput, {\n      id: id,\n      title: title,\n      completed: completed,\n      updateTodo: updateTodo,\n      isEditing: isEditing,\n      setIsEditing: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex-grow-1\",\n        role: \"button\",\n        onClick: () => setIsEditing(!isEditing),\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"outline-info\",\n          onClick: () => updateTodo({\n            completed: !completed,\n            title\n          }, id),\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `fa-solid ${completed ? \"fa-toggle-on\" : \"fa-toggle-off\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          onClick: () => removeTodo(id),\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"fa-regular fa-trash-can\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"exB1i1ZNG7xr2ihXKENrdl1IZDc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/React/cc11-basic-todo-list/src/components/todo-list/Todo.js"],"names":["useContext","useState","Button","TodoInput","TodoContext","Todo","props","ctx","title","completed","id","removeTodo","updateTodo","isEditing","setIsEditing"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,WAAT,QAA4B,4BAA5B;;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,GAAG,GAAGP,UAAU,CAACI,WAAD,CAAtB,CADmB,CAEnB;;AACA,QAAM;AAAEI,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,EAApB;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA;AAApC,MAAmDN,KAAzD,CAHmB,CAKnB;;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,sBACE;AACE,IAAA,SAAS,EAAG,mEACVQ,SAAS,GAAG,oBAAH,GAA0B,oBACpC,EAHH;AAAA,cAKGI,SAAS,gBACR,QAAC,SAAD;AACE,MAAA,EAAE,EAAEH,EADN;AAEE,MAAA,KAAK,EAAEF,KAFT;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,UAAU,EAAEG,UAJd;AAKE,MAAA,SAAS,EAAEC,SALb;AAME,MAAA,YAAY,EAAEC;AANhB;AAAA;AAAA;AAAA;AAAA,YADQ,gBAUR;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAA4C,QAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,CAACD,SAAF,CAAvE;AAAA,kBACGL;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,cAAd;AAA6B,UAAA,OAAO,EAAE,MAAMI,UAAU,CAAC;AAAEH,YAAAA,SAAS,EAAE,CAACA,SAAd;AAAyBD,YAAAA;AAAzB,WAAD,EAAmCE,EAAnC,CAAtD;AAAA,iCACE;AAAI,YAAA,SAAS,EAAG,YAAWD,SAAS,GAAG,cAAH,GAAoB,eAAgB;AAAxE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAuB,UAAA,OAAO,EAAE,MAAME,UAAU,CAACD,EAAD,CAAhD;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GAvCQL,I;;KAAAA,I;AAwCT,eAAeA,IAAf","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport Button from \"../ui/Button\";\r\nimport TodoInput from \"./TodoInput\";\r\n\r\nimport { TodoContext } from \"../../contexts/TodoContext\";\r\nfunction Todo(props) {\r\n  const ctx = useContext(TodoContext);\r\n  // Destructuring object\r\n  const { title, completed, id, removeTodo, updateTodo } = props;\r\n\r\n  // State parameter declaration\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  return (\r\n    <li\r\n      className={`list-group-item d-flex flex-wrap  align-items-center bd-callout ${\r\n        completed ? \"bd-callout-success\" : \"bd-callout-warning\"\r\n      }`}\r\n    >\r\n      {isEditing ? (\r\n        <TodoInput\r\n          id={id}\r\n          title={title}\r\n          completed={completed}\r\n          updateTodo={updateTodo}\r\n          isEditing={isEditing}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n      ) : (\r\n        <>\r\n          <span className=\"flex-grow-1\" role=\"button\" onClick={() => setIsEditing(!isEditing)}>\r\n            {title}\r\n          </span>\r\n          <div className=\"btn-group\">\r\n            <Button color=\"outline-info\" onClick={() => updateTodo({ completed: !completed, title }, id)}>\r\n              <li className={`fa-solid ${completed ? \"fa-toggle-on\" : \"fa-toggle-off\"}`} />\r\n            </Button>\r\n            <Button color=\"danger\" onClick={() => removeTodo(id)}>\r\n              <li className=\"fa-regular fa-trash-can\" />\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}