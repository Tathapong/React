{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\cc11-basic-todo-list\\\\src\\\\components\\\\filter\\\\FilterSearch.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport TodoList from \"../todo-list/TodoList\";\nimport Button from \"../ui/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FilterSearch(props) {\n  _s();\n\n  const {\n    filteredTodoList,\n    setFilteredTodoList\n  } = props;\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [cloneFilteredTodoList, setCloneFilteredTodoList] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search\",\n      value: searchInput,\n      onChange: ev => {\n        setSearchInput(ev.target.value);\n\n        if (searchInput) {\n          const cloneFilteredTodoList = [...filteredTodoList];\n          cloneFilteredTodoList = cloneFilteredTodoList.filter(item => item.title.startsWith(searchInput));\n          setCloneFilteredTodoList(cloneFilteredTodoList);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"dark\",\n      onClick: () => setSearchInput(\"\"),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-xmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterSearch, \"5roFMveBwhGeSdfL0waqEuvzcfw=\");\n\n_c = FilterSearch;\nexport default FilterSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterSearch\");","map":{"version":3,"sources":["D:/React/cc11-basic-todo-list/src/components/filter/FilterSearch.js"],"names":["useState","TodoList","Button","FilterSearch","props","filteredTodoList","setFilteredTodoList","searchInput","setSearchInput","cloneFilteredTodoList","setCloneFilteredTodoList","ev","target","value","filter","item","title","startsWith"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CF,KAAlD;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,qBAAD,EAAwBC,wBAAxB,IAAoDV,QAAQ,CAAC,EAAD,CAAlE;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,WAAW,EAAC,QAHd;AAIE,MAAA,KAAK,EAAEO,WAJT;AAKE,MAAA,QAAQ,EAAGI,EAAD,IAAQ;AAChBH,QAAAA,cAAc,CAACG,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAd;;AACA,YAAIN,WAAJ,EAAiB;AACf,gBAAME,qBAAqB,GAAG,CAAC,GAAGJ,gBAAJ,CAA9B;AACAI,UAAAA,qBAAqB,GAAGA,qBAAqB,CAACK,MAAtB,CAA8BC,IAAD,IAAUA,IAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBV,WAAtB,CAAvC,CAAxB;AACAG,UAAAA,wBAAwB,CAACD,qBAAD,CAAxB;AACD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,MAAMD,cAAc,CAAC,EAAD,CAAlD;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAzBQL,Y;;KAAAA,Y;AA2BT,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\r\nimport TodoList from \"../todo-list/TodoList\";\r\nimport Button from \"../ui/Button\";\r\nfunction FilterSearch(props) {\r\n  const { filteredTodoList, setFilteredTodoList } = props;\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [cloneFilteredTodoList, setCloneFilteredTodoList] = useState(\"\");\r\n  return (\r\n    <div className=\"input-group shadow\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search\"\r\n        value={searchInput}\r\n        onChange={(ev) => {\r\n          setSearchInput(ev.target.value);\r\n          if (searchInput) {\r\n            const cloneFilteredTodoList = [...filteredTodoList];\r\n            cloneFilteredTodoList = cloneFilteredTodoList.filter((item) => item.title.startsWith(searchInput));\r\n            setCloneFilteredTodoList(cloneFilteredTodoList);\r\n          }\r\n        }}\r\n      />\r\n      <Button color=\"dark\" onClick={() => setSearchInput(\"\")}>\r\n        <i className=\"fa-solid fa-xmark\"></i>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterSearch;\r\n"]},"metadata":{},"sourceType":"module"}