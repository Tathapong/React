{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\cc11-basic-todo-list\\\\src\\\\contexts\\\\TodoContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext();\n\nfunction TodoContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [todoList, setTodoList] = useState([]);\n  const [searchStatus, setSearchStatus] = useState(null);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [page, setPage] = useState({\n    pagelimit: 10,\n    currentPage: 1\n  });\n\n  const createTodo = title => {\n    axios.post(\"http://localhost:8080/todos\", {\n      title,\n      completed: false\n    }).then(res => {\n      const newTodo = res.data.todo;\n      setTodoList([newTodo, ...todoList]);\n    }).catch(err => console.log(err));\n  };\n\n  const removeTodo = id => {\n    axios.delete(`http://localhost:8080/todos/${id}`).then(() => {\n      const idx = todoList.findIndex(el => el.id === id);\n\n      if (idx !== -1) {\n        const cloneTodoList = [...todoList];\n        cloneTodoList.splice(idx, 1);\n        setTodoList(cloneTodoList);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const updateTodo = (newValue, id) => {\n    axios.put(`http://localhost:8080/todos/${id}`, { ...newValue\n    }).then(res => {\n      const idx = todoList.findIndex(el => el.id === id);\n\n      if (idx !== -1) {\n        const cloneTodoList = [...todoList];\n        cloneTodoList.splice(idx, 1, { ...newValue,\n          id\n        });\n        setTodoList(cloneTodoList);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  const changeSearchStatus = value => {\n    setSearchStatus(value);\n    setPage({ ...page,\n      currentPage: 1\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/todos\").then(res => setTodoList(res.data.todos)).catch(err => console.log(err));\n  }, []);\n  const searchTodoList = todoList.filter(el => el.title.toUpperCase().includes(searchInput.toUpperCase()));\n  const filteredTodoList = searchTodoList.filter(el => searchStatus === null || el.completed === searchStatus);\n  const filteredTodoListLimit = filteredTodoList.slice((page.currentPage - 1) * page.pagelimit, page.currentPage * page.pagelimit);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      todoList,\n      setTodoList,\n      createTodo,\n      removeTodo,\n      updateTodo,\n      searchInput,\n      setSearchInput,\n      searchStatus,\n      changeSearchStatus,\n      filteredTodoListLimit,\n      filteredTodoList,\n      page,\n      setPage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoContextProvider, \"wOkJYc3cMkxRr72NoTVYGyhvrtU=\");\n\n_c = TodoContextProvider;\nexport { TodoContext, TodoContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["D:/React/cc11-basic-todo-list/src/contexts/TodoContext.js"],"names":["createContext","useState","useEffect","axios","v4","uuidv4","TodoContext","TodoContextProvider","children","todoList","setTodoList","searchStatus","setSearchStatus","searchInput","setSearchInput","page","setPage","pagelimit","currentPage","createTodo","title","post","completed","then","res","newTodo","data","todo","catch","err","console","log","removeTodo","id","delete","idx","findIndex","el","cloneTodoList","splice","updateTodo","newValue","put","changeSearchStatus","value","get","todos","searchTodoList","filter","toUpperCase","includes","filteredTodoList","filteredTodoListLimit","slice"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;;AAEA,SAASO,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC;AAC/BgB,IAAAA,SAAS,EAAE,EADoB;AAE/BC,IAAAA,WAAW,EAAE;AAFkB,GAAD,CAAhC;;AAKA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BjB,IAAAA,KAAK,CACFkB,IADH,CACQ,6BADR,EACuC;AAAED,MAAAA,KAAF;AAASE,MAAAA,SAAS,EAAE;AAApB,KADvC,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAMC,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,IAAzB;AACAjB,MAAAA,WAAW,CAAC,CAACe,OAAD,EAAU,GAAGhB,QAAb,CAAD,CAAX;AACD,KALH,EAMGmB,KANH,CAMUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOD,GARD;;AAUA,QAAMG,UAAU,GAAIC,EAAD,IAAQ;AACzB9B,IAAAA,KAAK,CACF+B,MADH,CACW,+BAA8BD,EAAG,EAD5C,EAEGV,IAFH,CAEQ,MAAM;AACV,YAAMY,GAAG,GAAG1B,QAAQ,CAAC2B,SAAT,CAAoBC,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUA,EAArC,CAAZ;;AACA,UAAIE,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,cAAMG,aAAa,GAAG,CAAC,GAAG7B,QAAJ,CAAtB;AACA6B,QAAAA,aAAa,CAACC,MAAd,CAAqBJ,GAArB,EAA0B,CAA1B;AACAzB,QAAAA,WAAW,CAAC4B,aAAD,CAAX;AACD;AACF,KATH,EAUGV,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,GAZD;;AAcA,QAAMW,UAAU,GAAG,CAACC,QAAD,EAAWR,EAAX,KAAkB;AACnC9B,IAAAA,KAAK,CACFuC,GADH,CACQ,+BAA8BT,EAAG,EADzC,EAC4C,EAAE,GAAGQ;AAAL,KAD5C,EAEGlB,IAFH,CAESC,GAAD,IAAS;AACb,YAAMW,GAAG,GAAG1B,QAAQ,CAAC2B,SAAT,CAAoBC,EAAD,IAAQA,EAAE,CAACJ,EAAH,KAAUA,EAArC,CAAZ;;AACA,UAAIE,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,cAAMG,aAAa,GAAG,CAAC,GAAG7B,QAAJ,CAAtB;AACA6B,QAAAA,aAAa,CAACC,MAAd,CAAqBJ,GAArB,EAA0B,CAA1B,EAA6B,EAAE,GAAGM,QAAL;AAAeR,UAAAA;AAAf,SAA7B;AACAvB,QAAAA,WAAW,CAAC4B,aAAD,CAAX;AACD;AACF,KATH,EAUGV,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,GAZD;;AAcA,QAAMc,kBAAkB,GAAIC,KAAD,IAAW;AACpChC,IAAAA,eAAe,CAACgC,KAAD,CAAf;AACA5B,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,MAAAA,WAAW,EAAE;AAAxB,KAAD,CAAP;AACD,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACF0C,GADH,CACO,6BADP,EAEGtB,IAFH,CAESC,GAAD,IAASd,WAAW,CAACc,GAAG,CAACE,IAAJ,CAASoB,KAAV,CAF5B,EAGGlB,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,GALQ,EAKN,EALM,CAAT;AAOA,QAAMkB,cAAc,GAAGtC,QAAQ,CAACuC,MAAT,CAAiBX,EAAD,IAAQA,EAAE,CAACjB,KAAH,CAAS6B,WAAT,GAAuBC,QAAvB,CAAgCrC,WAAW,CAACoC,WAAZ,EAAhC,CAAxB,CAAvB;AACA,QAAME,gBAAgB,GAAGJ,cAAc,CAACC,MAAf,CAAuBX,EAAD,IAAQ1B,YAAY,KAAK,IAAjB,IAAyB0B,EAAE,CAACf,SAAH,KAAiBX,YAAxE,CAAzB;AACA,QAAMyC,qBAAqB,GAAGD,gBAAgB,CAACE,KAAjB,CAC5B,CAACtC,IAAI,CAACG,WAAL,GAAmB,CAApB,IAAyBH,IAAI,CAACE,SADF,EAE5BF,IAAI,CAACG,WAAL,GAAmBH,IAAI,CAACE,SAFI,CAA9B;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLR,MAAAA,QADK;AAELC,MAAAA,WAFK;AAGLS,MAAAA,UAHK;AAILa,MAAAA,UAJK;AAKLQ,MAAAA,UALK;AAML3B,MAAAA,WANK;AAOLC,MAAAA,cAPK;AAQLH,MAAAA,YARK;AASLgC,MAAAA,kBATK;AAULS,MAAAA,qBAVK;AAWLD,MAAAA,gBAXK;AAYLpC,MAAAA,IAZK;AAaLC,MAAAA;AAbK,KADT;AAAA,cAiBGR;AAjBH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAvFQD,mB;;KAAAA,mB;AAyFT,SAASD,WAAT,EAAsBC,mBAAtB","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TodoContext = createContext();\r\n\r\nfunction TodoContextProvider({ children }) {\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [searchStatus, setSearchStatus] = useState(null);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [page, setPage] = useState({\r\n    pagelimit: 10,\r\n    currentPage: 1\r\n  });\r\n\r\n  const createTodo = (title) => {\r\n    axios\r\n      .post(\"http://localhost:8080/todos\", { title, completed: false })\r\n      .then((res) => {\r\n        const newTodo = res.data.todo;\r\n        setTodoList([newTodo, ...todoList]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    axios\r\n      .delete(`http://localhost:8080/todos/${id}`)\r\n      .then(() => {\r\n        const idx = todoList.findIndex((el) => el.id === id);\r\n        if (idx !== -1) {\r\n          const cloneTodoList = [...todoList];\r\n          cloneTodoList.splice(idx, 1);\r\n          setTodoList(cloneTodoList);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const updateTodo = (newValue, id) => {\r\n    axios\r\n      .put(`http://localhost:8080/todos/${id}`, { ...newValue })\r\n      .then((res) => {\r\n        const idx = todoList.findIndex((el) => el.id === id);\r\n        if (idx !== -1) {\r\n          const cloneTodoList = [...todoList];\r\n          cloneTodoList.splice(idx, 1, { ...newValue, id });\r\n          setTodoList(cloneTodoList);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const changeSearchStatus = (value) => {\r\n    setSearchStatus(value);\r\n    setPage({ ...page, currentPage: 1 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/todos\")\r\n      .then((res) => setTodoList(res.data.todos))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const searchTodoList = todoList.filter((el) => el.title.toUpperCase().includes(searchInput.toUpperCase()));\r\n  const filteredTodoList = searchTodoList.filter((el) => searchStatus === null || el.completed === searchStatus);\r\n  const filteredTodoListLimit = filteredTodoList.slice(\r\n    (page.currentPage - 1) * page.pagelimit,\r\n    page.currentPage * page.pagelimit\r\n  );\r\n\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        todoList,\r\n        setTodoList,\r\n        createTodo,\r\n        removeTodo,\r\n        updateTodo,\r\n        searchInput,\r\n        setSearchInput,\r\n        searchStatus,\r\n        changeSearchStatus,\r\n        filteredTodoListLimit,\r\n        filteredTodoList,\r\n        page,\r\n        setPage\r\n      }}\r\n    >\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n\r\nexport { TodoContext, TodoContextProvider };\r\n"]},"metadata":{},"sourceType":"module"}